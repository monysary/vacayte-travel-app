[{"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\index.js":"1","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\App.js":"2","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\pages\\Home\\index.js":"3","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\pages\\Dashboard\\index.js":"4","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\pages\\AddTripForm\\index.js":"5","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\pages\\Dashboard\\Dashboard.js":"6","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\pages\\Home\\Home.js":"7","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\pages\\AddTripForm\\AddTripForm.js":"8","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\utils\\queries.js":"9","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\utils\\mutations.js":"10","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\utils\\auth.js":"11","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\LeftPanel\\index.js":"12","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\NavBar\\index.js":"13","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\CreateItinerary\\index.js":"14","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\ViewTrip\\index.js":"15","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\Welcome\\index.js":"16","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\Login\\index.js":"17","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\Register\\index.js":"18","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\Register\\Register.js":"19","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\Login\\Login.js":"20","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\Welcome\\Welcome.js":"21","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\CreateItinerary\\CreateItinerary.js":"22","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\ViewTrip\\ViewTrip.js":"23","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\NavBar\\NavBar.js":"24","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\LeftPanel\\LeftPanel.js":"25","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\ViewTrip\\YelpEntry.js":"26","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\MobileMenu\\index.js":"27","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\MobileMenu\\MobileMenu.js":"28","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\MobileHeader\\index.js":"29","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\MobileHeader\\MobileHeader.js":"30"},{"size":1185,"mtime":1681357823568,"results":"31","hashOfConfig":"32"},{"size":1415,"mtime":1681357823555,"results":"33","hashOfConfig":"32"},{"size":37,"mtime":1681357823570,"results":"34","hashOfConfig":"32"},{"size":42,"mtime":1681357823570,"results":"35","hashOfConfig":"32"},{"size":42,"mtime":1681357823569,"results":"36","hashOfConfig":"32"},{"size":6415,"mtime":1681663843027,"results":"37","hashOfConfig":"32"},{"size":2690,"mtime":1681662257623,"results":"38","hashOfConfig":"32"},{"size":11425,"mtime":1682124265754,"results":"39","hashOfConfig":"32"},{"size":1419,"mtime":1681357823571,"results":"40","hashOfConfig":"32"},{"size":2249,"mtime":1681357823571,"results":"41","hashOfConfig":"32"},{"size":762,"mtime":1681357823571,"results":"42","hashOfConfig":"32"},{"size":40,"mtime":1681357823561,"results":"43","hashOfConfig":"32"},{"size":37,"mtime":1681357823562,"results":"44","hashOfConfig":"32"},{"size":46,"mtime":1681357823560,"results":"45","hashOfConfig":"32"},{"size":39,"mtime":1681357823566,"results":"46","hashOfConfig":"32"},{"size":38,"mtime":1681357823567,"results":"47","hashOfConfig":"32"},{"size":38,"mtime":1681357823562,"results":"48","hashOfConfig":"32"},{"size":41,"mtime":1681357823563,"results":"49","hashOfConfig":"32"},{"size":4993,"mtime":1681357823563,"results":"50","hashOfConfig":"32"},{"size":2998,"mtime":1681357823561,"results":"51","hashOfConfig":"32"},{"size":2580,"mtime":1682124523891,"results":"52","hashOfConfig":"32"},{"size":3010,"mtime":1681357823560,"results":"53","hashOfConfig":"32"},{"size":3645,"mtime":1681662257620,"results":"54","hashOfConfig":"32"},{"size":1110,"mtime":1681357823562,"results":"55","hashOfConfig":"32"},{"size":4478,"mtime":1681357823561,"results":"56","hashOfConfig":"32"},{"size":4510,"mtime":1681662341676,"results":"57","hashOfConfig":"32"},{"size":43,"mtime":1681662341675,"results":"58","hashOfConfig":"32"},{"size":5594,"mtime":1682121594074,"results":"59","hashOfConfig":"32"},{"size":45,"mtime":1681662341674,"results":"60","hashOfConfig":"32"},{"size":784,"mtime":1681663831777,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"8dh87u",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\index.js",[],["127","128"],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\App.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\pages\\Home\\index.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\pages\\Dashboard\\index.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\pages\\AddTripForm\\index.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\pages\\Dashboard\\Dashboard.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\pages\\Home\\Home.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\pages\\AddTripForm\\AddTripForm.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\utils\\queries.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\utils\\mutations.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\utils\\auth.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\LeftPanel\\index.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\NavBar\\index.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\CreateItinerary\\index.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\ViewTrip\\index.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\Welcome\\index.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\Login\\index.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\Register\\index.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\Register\\Register.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\Login\\Login.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\Welcome\\Welcome.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\CreateItinerary\\CreateItinerary.js",["129"],"import {\n    Box,\n    Grid,\n    Typography,\n    Button\n} from '@mui/material'\nimport AddIcon from '@mui/icons-material/Add';\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { theme } from '../../App.js'\n\nfunction CreateItinerary({ font, fontColor, isDisplayed, lazyStartDate, lazyEndDate }) {\n    // Get range of dates based on start and end date\n    const getDates = (startDate, endDate) => {\n        const dates = [];\n        let currentDate = startDate;\n        const weekday = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n\n        const getNextDay = (currentDate) => {\n            const convertedDate = new Date(currentDate)\n            const date = convertedDate.setDate(convertedDate.getDate() + 1)\n            return new Date(date).toLocaleDateString('en-us', {\n                month: '2-digit',\n                day: '2-digit',\n                year: 'numeric',\n            })\n        }\n\n        for (let i = new Date(startDate); i <= new Date(endDate); i.setDate(i.getDate() + 1)) {\n            dates.push(`${currentDate}, ${weekday[new Date(currentDate).getDay()]}`)\n            currentDate = getNextDay(currentDate)\n        }\n\n        return dates\n    }\n\n    const vacayteDates = getDates(lazyStartDate, lazyEndDate)\n\n    function DateEntry() {\n        return (\n            <Box maxWidth='200px'>\n                \n            </Box>\n        )\n    }\n\n    function ViewDates({ date }) {\n        return (\n            <Grid item sx={{\n                backgroundColor: '#F5F5F5',\n                borderRadius: '20px',\n                padding: '10px 20px',\n            }}>\n                <Grid container justifyContent='space-between' wrap='nowrap'>\n                    <Typography component=\"h2\" variant=\"h5\" fontFamily={font} color={fontColor.primary}>\n                        {date}\n                    </Typography>\n                </Grid>\n                <Grid container wrap='nowrap' overflow='auto'>\n                    <Grid container wrap='nowrap' gap={3}>\n                        <Box maxWidth='200px'>\n                            <Button variant='outlined' color='secondary'>\n                                <AddIcon />\n                            </Button>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </Grid>\n        )\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Box sx={{\n                marginX: '40px',\n                paddingBottom: '40px',\n                display: isDisplayed.createItinerary ? 'flex' : 'none',\n                flexDirection: 'column',\n                gap: '20px',\n            }}>\n                {vacayteDates.map((date) =>\n                    <ViewDates\n                        key={date}\n                        date={date}\n                    />\n                )}\n            </Box>\n        </ThemeProvider>\n    )\n}\n\nexport default CreateItinerary;","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\ViewTrip\\ViewTrip.js",["130"],"import { useEffect, useState } from \"react\";\nimport { Box, Grid, Typography, CircularProgress } from \"@mui/material\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { theme } from \"../../App.js\";\n\nimport YelpEntry from \"./YelpEntry.js\";\n\nfunction ViewTrip({ font, fontColor, isDisplayed, tripInfo, loadTrip }) {\n  // Creating object with trip data\n  const tripData = {\n    tripID: tripInfo?._id || \"\",\n    tripName: tripInfo?.tripName || \"\",\n    location: tripInfo?.location || \"\",\n    startDate: tripInfo?.startDate || \"\",\n    endDate: tripInfo?.endDate || \"\",\n    activities: tripInfo?.activities || [],\n  };\n\n  function ActivityCard({ tripID, activityName, activitySaved }) {\n    const [yelpData, setYelpData] = useState(null);\n\n    useEffect(() => {\n      const fetchYelp = async () => {\n        try {\n          fetch(\n            `/api/yelp?location=${tripData.location}&term=${activityName}&cache=false`\n          )\n            .then((res) => {\n              return res.json();\n            })\n            .then((data) => {\n              setYelpData(data?.businesses || null);\n            });\n        } catch (err) {\n          console.log(\"Yelp Fetch Error:\", err);\n        }\n      };\n\n      fetchYelp();\n    }, []);\n\n    const [bookmarked, setBookmarked] = useState(activitySaved);\n    // console.log(\"bookmarked\", bookmarked)\n\n    if (tripData.activities.length > 0) {\n      return (\n        <Grid\n          item\n          sx={{\n            backgroundColor: \"#F5F5F5\",\n            borderRadius: \"20px\",\n            padding: \"10px 20px\",\n          }}\n        >\n          <Grid container justifyContent=\"space-between\" wrap=\"nowrap\">\n            <Typography\n              component=\"h2\"\n              variant=\"h5\"\n              fontFamily={font}\n              color={fontColor.primary}\n            >\n              {activityName}\n            </Typography>\n          </Grid>\n          <Grid container wrap=\"nowrap\" overflow=\"auto\">\n            <Grid container wrap=\"nowrap\" gap={3}>\n              {yelpData ? (\n                yelpData.map((business) => (\n                  <YelpEntry\n                    key={business.id}\n                    yelpID={business.id}\n                    name={business.name}\n                    image={business.image_url}\n                    rating={business.rating}\n                    price={business.price}\n                    categories={business.categories}\n                    distance={business.distance}\n                    url={business.url}\n                    font={font}\n                    fontColor={fontColor}\n                    activityName={activityName}\n                    activitySaved={activitySaved}\n                    tripID={tripID}\n                    loadTrip={loadTrip}\n                    bookmarked={bookmarked}\n                    setBookmarked={setBookmarked}\n                  />\n                ))\n              ) : (\n                <CircularProgress />\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n      );\n    } else {\n      return <></>;\n    }\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box\n        sx={{\n          marginX: \"40px\",\n          paddingBottom: \"40px\",\n          display: isDisplayed.viewTrip ? \"flex\" : \"none\",\n          flexDirection: \"column\",\n          gap: \"20px\",\n        }}\n      >\n        {tripData.activities.map((activity) => (\n          <ActivityCard\n            key={activity.name}\n            tripID={tripData.tripID}\n            activityName={activity.name}\n            activitySaved={activity.saved}\n          />\n        ))}\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default ViewTrip;\n","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\NavBar\\NavBar.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\LeftPanel\\LeftPanel.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\ViewTrip\\YelpEntry.js",["131","132","133","134","135"],"import { useEffect, useState } from \"react\";\nimport { Box, Grid, Typography, IconButton } from \"@mui/material\";\nimport BookmarkIcon from \"@mui/icons-material/Bookmark\";\nimport BookmarkBorderIcon from \"@mui/icons-material/BookmarkBorder\";\n\nimport { useMutation, useLazyQuery, useQuery } from \"@apollo/client\";\nimport { SAVE_ACTIVITY, DELETE_ACTIVITY } from \"../../utils/mutations.js\";\nimport { BOOKMARKED } from \"../../utils/queries.js\";\n\nimport placeholder from \"../../assets/images/placeholder.png\";\n\nfunction YelpEntry({\n  yelpID,\n  name,\n  image,\n  rating,\n  price,\n  categories,\n  distance,\n  url,\n  font,\n  fontColor,\n  activityName,\n  activitySaved,\n  tripID,\n  loadTrip,\n  bookmarked,\n  setBookmarked,\n}) {\n  const categoryArr = [];\n  categories.map((c) => categoryArr.push(c.title));\n\n  const [saveActivity] = useMutation(SAVE_ACTIVITY);\n  const [deleteActivity] = useMutation(DELETE_ACTIVITY);\n\n  let existingTrips = JSON.parse(localStorage.getItem(tripID));\n  if (existingTrips == null) {\n    existingTrips = [];\n  }\n\n  let nonExistentTrips = JSON.parse(localStorage.getItem(\"-\" + tripID));\n  if (nonExistentTrips == null) {\n    nonExistentTrips = [];\n  }\n\n  const [isBookmarked, setIsBookmarked] = useState(\n    bookmarked.findIndex((activity) => activity.businessID === yelpID) < 0\n  );\n\n  const bookmarkYelp = async () => {\n    if (isBookmarked) {\n      setBookmarked((prev) => [...prev, { businessID: yelpID }]);\n      console.log(\"bookmark added\", yelpID);\n      //   localStorage.setItem(\"bookmarks\", yelpID);\n      existingTrips.push(yelpID);\n      localStorage.setItem(tripID, JSON.stringify(existingTrips));\n      try {\n        await saveActivity({\n          variables: {\n            tripId: tripID,\n            activityName: activityName,\n            businessID: yelpID,\n            businessName: name,\n            businessCategory: categoryArr.join(\", \"),\n            businessRating: rating,\n            businessURL: url,\n          },\n        });\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsBookmarked(false);\n      }\n    } else {\n      console.log(\"bookmark removed\", yelpID);\n      //   localStorage.removeItem(\"bookmarks\", yelpID);\n      let newExistingTrips = existingTrips.filter((x) => x !== yelpID);\n      nonExistentTrips.push(yelpID);\n      localStorage.setItem(\"-\" + tripID, JSON.stringify(nonExistentTrips));\n      localStorage.setItem(tripID, JSON.stringify(newExistingTrips));\n\n      try {\n        await deleteActivity({\n          variables: {\n            tripId: tripID,\n            activityName: activityName,\n            businessID: yelpID,\n          },\n        });\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsBookmarked(true);\n      }\n    }\n  };\n\n  return (\n    <Box maxWidth=\"200px\">\n      <a href={url} target=\"_blank\">\n        <img\n          src={image ? `${image}` : placeholder}\n          alt={name}\n          width=\"200px\"\n          height=\"200px\"\n          style={{ borderRadius: \"10px\", cursor: \"pointer\" }}\n        />\n      </a>\n      <Grid container wrap=\"nowrap\" justifyContent=\"space-between\">\n        <Typography fontSize=\"14px\" fontFamily={font} fontWeight=\"bold\">\n          {name} • {rating}★\n        </Typography>\n        <Grid\n          item\n          xs={4}\n          fontSize=\"12px\"\n          fontFamily={font}\n          color={fontColor.grey}\n          textAlign=\"right\"\n        >\n          <Grid container direction=\"column\" alignItems=\"flex-end\">\n            {Math.round(distance * 0.000621371 * 10) / 10} mi\n            {\n              <IconButton\n                disableRipple\n                sx={{ padding: 0 }}\n                onClick={bookmarkYelp}\n              >\n                {(!isBookmarked && !nonExistentTrips.includes(yelpID)) ||\n                (existingTrips.includes(yelpID) &&\n                  !nonExistentTrips.includes(yelpID)) ? (\n                  <BookmarkIcon\n                    sx={{\n                      color: fontColor.primary,\n                    }}\n                  />\n                ) : (\n                  <BookmarkBorderIcon\n                    sx={{\n                      color: fontColor.primary,\n                    }}\n                  />\n                )}\n              </IconButton>\n            }\n          </Grid>\n        </Grid>\n      </Grid>\n      <Typography fontSize=\"14px\" fontFamily={font} color={fontColor.grey}>\n        {price} • {categoryArr.join(\", \")}\n      </Typography>\n    </Box>\n  );\n}\n\nexport default YelpEntry;\n","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\MobileMenu\\index.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\MobileMenu\\MobileMenu.js",["136"],"import * as React from \"react\";\nimport Drawer from \"@mui/material/Drawer\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\n\nimport { Grid, Typography, Button, Link, Box } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { theme } from \"../../App.js\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { GET_MY_TRIPS } from \"../../utils/queries.js\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\n\nexport default function MobileDrawer({\n  font,\n  fontColor,\n  isDisplayed,\n  setIsDisplayed,\n  setSelectTrip,\n  tripName,\n  loadTrip,\n}) {\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const { loading, data } = useQuery(GET_MY_TRIPS);\n  const myTrips = data?.getMyTrips.trips || [];\n\n  function TripsButton() {\n    if (!loading) {\n      return myTrips.map((trip) => (\n        <Grid key={trip._id} item xs={12}>\n          <Button\n            variant={trip.tripName === tripName ? \"outlined\" : \"text\"}\n            fullWidth\n            sx={{\n              color: `${fontColor.black}`,\n              padding: \"10px 0px\",\n              border:\n                trip.tripName === tripName\n                  ? `2px solid ${fontColor.primary}`\n                  : \"none\",\n            }}\n            onClick={() => {\n              setSelectTrip(`${trip._id}`);\n              setIsDisplayed({\n                ...isDisplayed,\n                welcome: false,\n                viewTrip: true,\n              });\n              loadTrip();\n            }}\n          >\n            {trip.tripName}\n          </Button>\n        </Grid>\n      ));\n    } else {\n      return <></>;\n    }\n  }\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === \"top\" || anchor === \"bottom\" ? \"auto\" : 250 }}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <ThemeProvider theme={theme}>\n        <Box sx={{ height: \"100vh\", overflow: \"auto\" }}>\n          <Grid container justifyContent=\"center\" py=\"30px\" gap=\"30px\">\n            <Grid item>\n              <Link\n                sx={{\n                  textDecoration: \"none\",\n                  \"&:hover\": { cursor: \"pointer\" },\n                }}\n                onClick={() => {\n                  setIsDisplayed({\n                    welcome: true,\n                  });\n                }}\n              >\n                <Typography textAlign=\"center\">\n                  <span\n                    style={{\n                      fontFamily: \"satisfy\",\n                      fontSize: \"40px\",\n                      color: `${fontColor.primary}`,\n                    }}\n                  >\n                    Vacay\n                  </span>\n                  <span\n                    style={{\n                      fontFamily: \"zilla slab\",\n                      fontSize: \"30px\",\n                      color: `${fontColor.darkGrey}`,\n                    }}\n                  >\n                    te\n                  </span>\n                </Typography>\n              </Link>\n            </Grid>\n            <Grid item height=\"100%\">\n              <Grid\n                container\n                alignItems=\"center\"\n                p=\"20px 30px\"\n                gap=\"20px\"\n                height=\"100%\"\n              >\n                <Grid item>\n                  <Typography variant=\"h6\" fontFamily={font} fontSize=\"18px\">\n                    MY TRIPS\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  height=\"2px\"\n                  width=\"100%\"\n                  sx={{ backgroundColor: \"#DFDFDF\" }}\n                />\n                <Grid item xs={12}>\n                  <RouterLink\n                    to={\"/add-trip\"}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <Button\n                      startIcon={<AddIcon />}\n                      variant=\"contained\"\n                      fullWidth\n                      sx={{ borderRadius: \"20px\" }}\n                    >\n                      ADD TRIP\n                    </Button>\n                  </RouterLink>\n                </Grid>\n                <Grid item xs={12}>\n                  <Grid container direction=\"column-reverse\">\n                    <TripsButton />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Box>\n      </ThemeProvider>\n    </Box>\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"hide-md\">\n        {[\"left\"].map((anchor) => (\n          <React.Fragment key={anchor}>\n            <Button\n              sx={{ backgroundColor: \"white\" }}\n              onClick={toggleDrawer(anchor, true)}\n            >\n              <MenuIcon sx={{ color: \"black\" }} />\n            </Button>\n            <SwipeableDrawer\n              anchor={anchor}\n              open={state[anchor]}\n              onClose={toggleDrawer(anchor, false)}\n              onOpen={toggleDrawer(anchor, true)}\n            >\n              {list(anchor)}\n            </SwipeableDrawer>\n          </React.Fragment>\n        ))}\n      </div>\n    </ThemeProvider>\n  );\n}\n","C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\MobileHeader\\index.js",[],"C:\\Users\\kyokh\\code\\projects\\vacayte-travel-app\\client\\src\\components\\MobileHeader\\MobileHeader.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":46,"column":14,"nodeType":"143","messageId":"144","endLine":46,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":40,"column":8,"nodeType":"147","endLine":40,"endColumn":10,"suggestions":"148"},{"ruleId":"141","severity":1,"message":"149","line":1,"column":10,"nodeType":"143","messageId":"144","endLine":1,"endColumn":19},{"ruleId":"141","severity":1,"message":"150","line":6,"column":23,"nodeType":"143","messageId":"144","endLine":6,"endColumn":35},{"ruleId":"141","severity":1,"message":"151","line":6,"column":37,"nodeType":"143","messageId":"144","endLine":6,"endColumn":45},{"ruleId":"141","severity":1,"message":"152","line":8,"column":10,"nodeType":"143","messageId":"144","endLine":8,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":100,"column":7,"nodeType":"155","messageId":"156","endLine":100,"endColumn":37,"fix":"157"},{"ruleId":"141","severity":1,"message":"158","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":14},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'DateEntry' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activityName'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'useEffect' is defined but never used.","'useLazyQuery' is defined but never used.","'useQuery' is defined but never used.","'BOOKMARKED' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"162","text":"163"},"'Drawer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},[2828,2828]," rel=\"noreferrer\"","Update the dependencies array to be: [activityName]",{"range":"166","text":"167"},[1231,1233],"[activityName]"]