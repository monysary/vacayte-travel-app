[{"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\index.js":"1","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\App.js":"2","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\pages\\Home\\index.js":"3","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\pages\\Home\\Home.js":"4","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\utils\\auth.js":"5","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\utils\\mutations.js":"6","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\pages\\Dashboard\\index.js":"7","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\pages\\Dashboard\\Dashboard.js":"8","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\Register\\index.js":"9","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\Login\\index.js":"10","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\Login\\Login.js":"11","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\Register\\Register.js":"12","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\LeftPanel\\LeftPanel.js":"13","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\LeftPanel\\index.js":"14","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\RightPanel\\index.js":"15","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\RightPanel\\RightPanel.js":"16","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\SearchBar\\SearchBar.js":"17","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\SearchBar\\index.js":"18","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\Welcome\\Welcome.js":"19","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\Welcome\\index.js":"20","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\utils\\queries.js":"21","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\pages\\AddTripForm\\index.js":"22","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\pages\\AddTripForm\\AddTripForm.js":"23","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\ViewTrip\\ViewTrip.js":"24","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\ViewTrip\\index.js":"25"},{"size":1185,"mtime":1676526595150,"results":"26","hashOfConfig":"27"},{"size":1373,"mtime":1676506741600,"results":"28","hashOfConfig":"27"},{"size":37,"mtime":1676001644099,"results":"29","hashOfConfig":"27"},{"size":2557,"mtime":1676256331122,"results":"30","hashOfConfig":"27"},{"size":743,"mtime":1676311800834,"results":"31","hashOfConfig":"27"},{"size":988,"mtime":1676353877077,"results":"32","hashOfConfig":"27"},{"size":43,"mtime":1676253940115,"results":"33","hashOfConfig":"27"},{"size":5774,"mtime":1676526213659,"results":"34","hashOfConfig":"27"},{"size":41,"mtime":1676001644179,"results":"35","hashOfConfig":"27"},{"size":38,"mtime":1676001644138,"results":"36","hashOfConfig":"27"},{"size":3015,"mtime":1676256342629,"results":"37","hashOfConfig":"27"},{"size":5018,"mtime":1676256353266,"results":"38","hashOfConfig":"27"},{"size":4506,"mtime":1676524247724,"results":"39","hashOfConfig":"27"},{"size":40,"mtime":1676256931752,"results":"40","hashOfConfig":"27"},{"size":42,"mtime":1676265726998,"results":"41","hashOfConfig":"27"},{"size":1559,"mtime":1676501226753,"results":"42","hashOfConfig":"27"},{"size":1112,"mtime":1676315257176,"results":"43","hashOfConfig":"27"},{"size":38,"mtime":1676266535554,"results":"44","hashOfConfig":"27"},{"size":3072,"mtime":1676522905658,"results":"45","hashOfConfig":"27"},{"size":38,"mtime":1676329652253,"results":"46","hashOfConfig":"27"},{"size":688,"mtime":1676402206697,"results":"47","hashOfConfig":"27"},{"size":42,"mtime":1676273510486,"results":"48","hashOfConfig":"27"},{"size":15252,"mtime":1676578397799,"results":"49","hashOfConfig":"27"},{"size":4894,"mtime":1676574758914,"results":"50","hashOfConfig":"27"},{"size":39,"mtime":1676523052516,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"19rtslu",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\index.js",[],["108","109"],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\App.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\pages\\Home\\index.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\pages\\Home\\Home.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\utils\\auth.js",["110"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token ? true : false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"auth_token\");\n  }\n\n  login(token) {\n    localStorage.setItem(\"auth_token\", token);\n    window.location.assign(\"/dashboard\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"auth_token\");\n    window.location.assign('/');\n  }\n\n  tokenExpired() {\n    const token = this.getToken();\n\n    if (!token) {\n      return true\n    }\n\n    const { exp } = decode(this.getToken());\n    const currentTime = new Date().getTime() / 1000\n    \n    return exp < currentTime;\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\utils\\mutations.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\pages\\Dashboard\\index.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\pages\\Dashboard\\Dashboard.js",["111"],"import { useEffect, useState } from 'react';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Box,\r\n} from '@mui/material';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { theme } from '../../App.js';\r\nimport dashboardBackground from '../../assets/images/dashboard-background.png';\r\n\r\nimport auth from '../../utils/auth.js';\r\n\r\nimport LeftPanel from '../../components/LeftPanel';\r\nimport RightPanel from '../../components/RightPanel';\r\nimport SearchBar from '../../components/SearchBar';\r\nimport Welcome from '../../components/Welcome';\r\nimport ViewTrip from '../../components/ViewTrip';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { SELECT_TRIP } from '../../utils/queries.js';\r\n\r\nexport const font = {\r\n    primary: 'Josefin Sans',\r\n    color: {\r\n        primary: '#569597',\r\n        secondary: '#D9BEAA',\r\n        white: '#F5F5F5',\r\n        black: '#252525',\r\n        grey: '#B2B2B2',\r\n        darkGrey: '#606060'\r\n    }\r\n}\r\n\r\nfunction Dashboard() {\r\n    if (!localStorage.getItem('auth_token')) {\r\n        window.location.assign('/');\r\n    } else if (auth.tokenExpired()) {\r\n        auth.logout();\r\n    }\r\n\r\n    const { data: { firstName } } = auth.getProfile();\r\n\r\n    // setState for displaying different components in dashboard\r\n    const [isDisplayed, setIsDisplayed] = useState({\r\n        welcome: true,\r\n        viewTrip: false,\r\n    })\r\n\r\n    // Populating currently selected trip information on dashboard\r\n    const [selectTrip, setSelectTrip] = useState('');\r\n    const { loading, data } = useQuery(SELECT_TRIP, {\r\n        variables: { _id: selectTrip }\r\n    });\r\n    const trip = data?.selectTrip || {}\r\n    const startDate = new Date(trip.startDate).toLocaleDateString('en-us', {\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        year: 'numeric',\r\n\r\n    })\r\n    const endDate = new Date(trip.endDate).toLocaleDateString('en-us', {\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        year: 'numeric',\r\n\r\n    })\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Grid container component=\"main\" wrap='nowrap' sx={{ height: '100vh' }}>\r\n                <Grid item md={2}>\r\n                    <LeftPanel\r\n                        font={font.primary}\r\n                        fontColor={font.color}\r\n                        isDisplayed={isDisplayed}\r\n                        setIsDisplayed={setIsDisplayed}\r\n                        setSelectTrip={setSelectTrip}\r\n                        tripName={!loading && trip.tripName}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={8}\r\n                    sx={{\r\n                        height: '100%',\r\n                        backgroundImage: `url(${dashboardBackground})`,\r\n                        backgroundSize: 'cover',\r\n                        backgroundPosition: 'center'\r\n                    }}\r\n                >\r\n                    <Box height='100vh' overflow='auto'>\r\n                        <Box p='30px 20% 20px'>\r\n                            <SearchBar font={font.primary} fontColor={font.color} />\r\n                        </Box>\r\n                        <Grid container wrap='nowrap' justifyContent='space-between' px='40px'>\r\n                            <Grid item>\r\n                                <Typography variant='h4' fontFamily={font.primary} color={`${font.color.white}`}>\r\n                                    Hello, {firstName}\r\n                                </Typography>\r\n                                <Typography variant='subtitle1' fontFamily={font.primary} color={`${font.color.grey}`}>\r\n                                    Let's make some memories!\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Box sx={{ display: selectTrip === '' ? 'none' : 'block' }}>\r\n                                    <Typography variant='h4' fontFamily={font.primary} color={`${font.color.white}`} textAlign='right'>\r\n                                        {!loading && `${trip.tripName}`}\r\n                                    </Typography>\r\n                                    <Typography variant='subtitle1' fontFamily={font.primary} color={`${font.color.grey}`} textAlign='right'>\r\n                                        {!loading && `${trip.location}`}\r\n                                    </Typography>\r\n                                    <Typography variant='subtitle1' fontFamily={font.primary} color={`${font.color.grey}`} textAlign='right'>\r\n                                        {!loading && `${startDate} - ${endDate}`}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Box pt='40px' >\r\n                            <Welcome\r\n                                font={font.primary}\r\n                                fontColor={font.color}\r\n                                isDisplayed={isDisplayed}\r\n                                setIsDisplayed={setIsDisplayed}\r\n                            />\r\n                            <ViewTrip\r\n                                font={font.primary}\r\n                                fontColor={font.color}\r\n                                isDisplayed={isDisplayed}\r\n                                setIsDisplayed={setIsDisplayed}\r\n                                tripInfo={trip}\r\n                            />\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item md={2}>\r\n                    <RightPanel font={font.primary} fontColor={font.color} />\r\n                </Grid>\r\n            </Grid>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\Register\\index.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\Login\\index.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\Login\\Login.js",["112","113"],"import {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Link,\n  Container,\n  CssBaseline\n} from '@mui/material'\nimport { ThemeProvider } from '@mui/material/styles';\nimport { theme } from '../../App.js'\nimport { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth.js\";\n\nfunction Login({ displayState, setLoginDisplay, setRegisterDisplay }) {\n\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [Login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await Login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n      alert(err.message)\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            display: displayState ? 'flex' : 'none',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h2\" variant=\"h4\" fontFamily='Josefin Sans'>\n            Sign In\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleFormSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  label=\"Email Address\"\n                  name=\"email\"\n                  type='email'\n                  value={formState.email}\n                  onChange={handleInputChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleInputChange}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Log In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link\n                  variant=\"body2\"\n                  sx={{ '&:hover': { cursor: 'pointer' } }}\n                  onClick={() => {\n                    setLoginDisplay(false)\n                    setRegisterDisplay(true)\n                  }}>\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default Login;\n","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\Register\\Register.js",["114","115","116"],"import {\n  Container,\n  CssBaseline,\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Button,\n  Link\n} from '@mui/material'\nimport { ThemeProvider } from '@mui/material/styles';\nimport { theme } from '../../App.js';\nimport { useEffect, useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { REGISTER_USER } from \"../../utils/mutations\";\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Register({ displayState, setLoginDisplay, setRegisterDisplay }) {\n  const [formState, setFormState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const [isDisabled, setIsDisabled] = useState(true)\n\n  const [register, { error, data }] = useMutation(REGISTER_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  useEffect(() => {\n    if (\n      formState.firstName &&\n      formState.lastName &&\n      formState.email &&\n      formState.password &&\n      formState.confirmPassword &&\n      formState.password.length >= 8 &&\n      formState.password === formState.confirmPassword\n    ) {\n      setIsDisabled(false)\n    } else {\n      setIsDisabled(true)\n    }\n  }, [handleInputChange])\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await register({\n        variables: { ...formState },\n      });\n      Auth.login(data.register.token);\n    } catch (err) {\n      console.error(err);\n      alert(err.message)\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            display: displayState ? 'flex' : 'none',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h2\" variant=\"h4\" fontFamily='Josefin Sans'>\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleFormSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  label=\"First Name\"\n                  type='text'\n                  value={formState.firstName}\n                  onChange={handleInputChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  type='text'\n                  value={formState.lastName}\n                  onChange={handleInputChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  label=\"Email Address\"\n                  name=\"email\"\n                  type='email'\n                  value={formState.email}\n                  onChange={handleInputChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  error={formState.password.length < 8 && formState.password.length > 0}\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleInputChange}\n                />\n                <Typography component='p' variant='caption' color='#B2B2B2'>\n                  Password must be 8 characters long.\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  error={formState.password !== formState.confirmPassword}\n                  required\n                  fullWidth\n                  name=\"confirmPassword\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  value={formState.confirmPassword}\n                  onChange={handleInputChange}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              disabled={isDisabled}\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Create Account\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link\n                  variant=\"body2\"\n                  sx={{ '&:hover': { cursor: 'pointer' } }}\n                  onClick={() => {\n                    setLoginDisplay(true)\n                    setRegisterDisplay(false)\n                  }}>\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default Register;\n","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\LeftPanel\\LeftPanel.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\LeftPanel\\index.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\RightPanel\\index.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\RightPanel\\RightPanel.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\SearchBar\\SearchBar.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\SearchBar\\index.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\Welcome\\Welcome.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\Welcome\\index.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\utils\\queries.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\pages\\AddTripForm\\index.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\pages\\AddTripForm\\AddTripForm.js",[],"C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\ViewTrip\\ViewTrip.js",["117","118"],"import { useEffect, useState } from \"react\";\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    Button\r\n} from \"@mui/material\";\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { theme } from '../../App.js'\r\n\r\nfunction ViewTrip({ font, fontColor, isDisplayed, setIsDisplayed, tripInfo, loading }) {\r\n    // Creating object with trip data\r\n    const tripData = {\r\n        tripName: tripInfo?.tripName || '',\r\n        location: tripInfo?.location || '',\r\n        startDate: tripInfo?.startDate || '',\r\n        endDate: tripInfo?.endDate || '',\r\n        activities: tripInfo?.activities || [],\r\n    };\r\n\r\n    // Fetch Yelp data by location and term\r\n    const yelpLocationTerm = async (term) => {\r\n        const response = await fetch(`http://localhost:3000/api/yelp?location=${tripData.location}&term=${term}`);\r\n\r\n        const data = await response.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    function ActivityCard({ activityName }) {\r\n        const [yelpData, setYelpData] = useState(null)\r\n\r\n        useEffect(() => {\r\n            const fetchYelp = async () => {\r\n                const data = await yelpLocationTerm(activityName)\r\n                setYelpData(data?.businesses || null)\r\n            };\r\n\r\n            fetchYelp()\r\n\r\n        }, [activityName])\r\n\r\n        if (yelpData) {\r\n            console.log(yelpData);\r\n        }\r\n\r\n        function YelpEntry({ name, image, rating, price, categories, distance, url }) {\r\n            const categoryArr = [];\r\n            categories.map((c) => categoryArr.push(c.title))\r\n\r\n            return (\r\n                <Box maxWidth='200px'>\r\n                    <img\r\n                        src={`${image}`}\r\n                        width='200px'\r\n                        height='200px'\r\n                        style={{ borderRadius: '10px', cursor: 'pointer' }}\r\n\r\n                        onClick={() => window.open(`${url}`, '_blank')}\r\n                    />\r\n                    <Grid container wrap=\"nowrap\" justifyContent='space-between'>\r\n                        <Typography\r\n                            fontSize='14px'\r\n                            fontFamily={font}\r\n                            fontWeight='bold'\r\n                        >{name} • {rating}★</Typography>\r\n                        <Grid\r\n                            item\r\n                            xs={4}\r\n                            fontSize='12px'\r\n                            fontFamily={font}\r\n                            color={fontColor.grey}\r\n                            textAlign='right'\r\n\r\n                        >{Math.round(distance * 0.000621371 * 10) / 10} mi</Grid>\r\n\r\n                    </Grid>\r\n                    <Typography\r\n                        fontSize='14px'\r\n                        fontFamily={font}\r\n                        color={fontColor.grey}\r\n                    >{price} • {categoryArr.join(', ')}</Typography>\r\n                </Box>\r\n            )\r\n        }\r\n\r\n        if (tripData.activities.length > 0) {\r\n            return (\r\n                <Grid item\r\n                    sx={{\r\n                        backgroundColor: '#F5F5F5',\r\n                        borderRadius: '20px',\r\n                        padding: '10px 20px'\r\n                    }}\r\n                >\r\n                    <Typography component=\"h2\" variant=\"h5\" fontFamily={font}>\r\n                        {activityName}\r\n                    </Typography>\r\n                    <Grid container wrap=\"nowrap\" overflow='auto'>\r\n                        <Grid container wrap=\"nowrap\" gap={3}>\r\n                            {yelpData ? yelpData.map((business) =>\r\n                                <YelpEntry\r\n                                    key={business.id}\r\n                                    name={business.name}\r\n                                    image={business.image_url}\r\n                                    rating={business.rating}\r\n                                    price={business.price}\r\n                                    categories={business.categories}\r\n                                    distance={business.distance}\r\n                                    url={business.url}\r\n                                />\r\n                            ) : <CircularProgress />}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box sx={{\r\n                marginX: '40px',\r\n                display: isDisplayed.viewTrip ? 'flex' : 'none',\r\n                flexDirection: 'column',\r\n                gap: '20px'\r\n            }}>\r\n                {tripData.activities.map((activity) => <ActivityCard key={activity} activityName={activity} />)}\r\n            </Box>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ViewTrip;","C:\\Users\\sarym\\Documents\\vacayte-travel-app\\client\\src\\components\\ViewTrip\\index.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":41,"column":1,"nodeType":"125","endLine":41,"endColumn":34},{"ruleId":"126","severity":1,"message":"127","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":19},{"ruleId":"126","severity":1,"message":"130","line":25,"column":19,"nodeType":"128","messageId":"129","endLine":25,"endColumn":24},{"ruleId":"126","severity":1,"message":"131","line":25,"column":26,"nodeType":"128","messageId":"129","endLine":25,"endColumn":30},{"ruleId":"126","severity":1,"message":"130","line":30,"column":22,"nodeType":"128","messageId":"129","endLine":30,"endColumn":27},{"ruleId":"126","severity":1,"message":"131","line":30,"column":29,"nodeType":"128","messageId":"129","endLine":30,"endColumn":33},{"ruleId":"132","severity":1,"message":"133","line":50,"column":6,"nodeType":"134","endLine":50,"endColumn":25,"suggestions":"135"},{"ruleId":"126","severity":1,"message":"136","line":7,"column":5,"nodeType":"128","messageId":"129","endLine":7,"endColumn":11},{"ruleId":"137","severity":1,"message":"138","line":54,"column":21,"nodeType":"139","endLine":61,"endColumn":23},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formState.confirmPassword', 'formState.email', 'formState.firstName', 'formState.lastName', and 'formState.password'. Either include them or remove the dependency array.","ArrayExpression",["142"],"'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [formState.confirmPassword, formState.email, formState.firstName, formState.lastName, formState.password, handleInputChange]",{"range":"145","text":"146"},[1218,1237],"[formState.confirmPassword, formState.email, formState.firstName, formState.lastName, formState.password, handleInputChange]"]